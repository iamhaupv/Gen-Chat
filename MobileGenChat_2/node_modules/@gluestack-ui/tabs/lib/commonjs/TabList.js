"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabList = void 0;
var _focus = require("@react-native-aria/focus");
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const TabList = StyledTabList => /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(({
  children,
  orientation = 'horizontal',
  variant,
  ...props
}, ref) => {
  let tabIndex = 0;
  const modifiedTabList = (0, _react.useMemo)(() => _react.default.Children.toArray(children).map(tab => {
    return /*#__PURE__*/_react.default.cloneElement(tab, {
      key: tab.key ?? `tab-${tabIndex}`,
      value: `tab-${tabIndex++}`,
      ...(tab === null || tab === void 0 ? void 0 : tab.props)
    });
  }),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  [children]);
  return /*#__PURE__*/_react.default.createElement(StyledTabList, _extends({
    role: "tablist",
    flexDirection: orientation === 'vertical' ? 'column' : 'row',
    overflowX: orientation === 'horizontal' && variant === 'scrollable' ? 'scroll' : 'hidden',
    overflowY: orientation === 'vertical' && variant === 'scrollable' ? 'scroll' : 'hidden'
  }, props, {
    ref: ref
  }), /*#__PURE__*/_react.default.createElement(_focus.FocusScope, null, modifiedTabList));
}));
exports.TabList = TabList;
//# sourceMappingURL=TabList.js.map