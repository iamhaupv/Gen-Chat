"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAccordion = void 0;

const useAccordion = props => {
  const {
    type,
    isCollapsible,
    selectedValues,
    setSelectedValues
  } = props;
  /*
   * The toggleItem function is responsible for updating the selected values
   * based on the type of accordion (single or multiple) and whether or not
   * the accordion is collapsible.
   */

  const toggleItem = (itemValue, isDisabled = false) => {
    if (isDisabled || !itemValue) return;

    if (type === 'single') {
      if (isCollapsible) {
        if (selectedValues.includes(itemValue)) {
          setSelectedValues([]);
        } else {
          setSelectedValues([itemValue]);
        }
      } else {
        if (selectedValues.includes(itemValue)) return;
        setSelectedValues([itemValue]);
      }
    } else {
      if (isCollapsible) {
        if (selectedValues.includes(itemValue)) {
          setSelectedValues(selectedValues.filter(v => v !== itemValue));
        } else {
          setSelectedValues([...selectedValues, itemValue]);
        }
      } else {
        if (selectedValues.includes(itemValue)) return;
        setSelectedValues([...selectedValues, itemValue]);
      }
    }
  };

  return {
    state: {
      selectedValues,
      toggleItem
    }
  };
};

exports.useAccordion = useAccordion;
//# sourceMappingURL=useAccordion.js.map