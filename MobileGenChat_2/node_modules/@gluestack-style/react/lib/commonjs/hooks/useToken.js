"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useToken = void 0;
var _StyledProvider = require("../StyledProvider");
var _Theme = require("../Theme");
/**
 *
 * @param tokenScale Token scale ex: colors, space, fontSizes, etc
 * @param token Token name ex: primary200, red500, 1, 2, sm, etc
 * @returns
 */
const useToken = (tokenScale, token) => {
  var _themeTokens$tokenSca;
  const theme = (0, _StyledProvider.useStyled)();
  const {
    themes: activeThemes = []
  } = (0, _Theme.useTheme)();
  for (const key in activeThemes === null || activeThemes === void 0 ? void 0 : activeThemes.reverse()) {
    var _theme$config;
    const currentTheme = activeThemes[key];
    if (theme !== null && theme !== void 0 && (_theme$config = theme.config) !== null && _theme$config !== void 0 && (_theme$config = _theme$config.themes) !== null && _theme$config !== void 0 && _theme$config.hasOwnProperty(currentTheme)) {
      var _theme$config2, _currentThemeTokens$t;
      const currentThemeTokens = theme === null || theme === void 0 || (_theme$config2 = theme.config) === null || _theme$config2 === void 0 ? void 0 : _theme$config2.themes[currentTheme];
      if (currentThemeTokens !== null && currentThemeTokens !== void 0 && (_currentThemeTokens$t = currentThemeTokens[tokenScale]) !== null && _currentThemeTokens$t !== void 0 && _currentThemeTokens$t[token]) {
        var _currentThemeTokens$t2;
        return currentThemeTokens === null || currentThemeTokens === void 0 || (_currentThemeTokens$t2 = currentThemeTokens[tokenScale]) === null || _currentThemeTokens$t2 === void 0 ? void 0 : _currentThemeTokens$t2[token];
      }
    }
  }
  const themeTokens = theme.config.tokens;
  return (themeTokens === null || themeTokens === void 0 || (_themeTokens$tokenSca = themeTokens[tokenScale]) === null || _themeTokens$tokenSca === void 0 ? void 0 : _themeTokens$tokenSca[token]) ?? token;
};
exports.useToken = useToken;
//# sourceMappingURL=useToken.js.map